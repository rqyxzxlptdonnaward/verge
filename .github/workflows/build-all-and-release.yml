name: '[Full Build - Linux, Windows, MacOS]'

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: git config credential.helper
        run: git config credential.helper

      - name: Brew install base dependencies
        run: brew install automake berkeley-db4 libtool boost@1.76 miniupnpc gperf qt@5 openssl pkg-config python libevent qrencode librsvg && curl -L https://raw.githubusercontent.com/udalov/protobuf261/master/protobuf261.rb > protobuf261.rb && brew install protobuf261.rb

      - name: Brew link dependencies
        run: brew link boost@1.76 qt@5 berkeley-db4

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: ./configure --disable-bench --disable-tests --disable-dependency-tracking --disable-werror --with-gui --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib

      - name: make
        run: make -j4

      - name: make check
        run: make check -j4

      - name: make .dmg
        run: make deploy

      - name: move and zip .dmg
        run: cp /Users/runner/work/verge/verge/verge-qt.dmg / && zip verge-macos.zip /verge-qt.dmg

      - uses: actions/upload-artifact@v4
        with:
          name: verge-macos.zip
          path: |
            *.dmg
  
  linux-ubuntu20:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Update apt repos
        run: sudo apt-get update

      - name: Install base dependencies
        run: sudo apt-get install build-essential libtool gperf autotools-dev automake pkg-config bsdmainutils libattr1-dev make automake bison byacc cmake curl g++-multilib binutils-gold bison byacc python3

      - name: Build depends
        run: cd depends/ && make -j4 HOST=x86_64-linux-gnu

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: ./configure --disable-bench --disable-tests --disable-dependency-tracking --disable-werror --prefix=`pwd`/depends/x86_64-linux-gnu --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib

      - name: make
        run: make -j4

      - name: make check
        run: make check -j4

      - name: zip binaries
        run: zip verge-ubuntu20.zip ./src/verged ./src/verge-cli ./src/verge-tx ./src/qt/verge-qt 

      - uses: actions/upload-artifact@v4
        with:
          name: verge-ubuntu20.zip
          path: |
            ./src/verged
            ./src/verge-cli
            ./src/verge-tx
            ./src/qt/verge-qt
  
  linux-ubuntu22:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Update apt repos
        run: sudo apt-get update

      - name: Install base dependencies
        run: sudo apt-get install build-essential libtool gperf autotools-dev automake pkg-config bsdmainutils libattr1-dev make automake bison byacc cmake curl g++-multilib binutils-gold bison byacc python3

      - name: Build depends
        run: cd depends/ && make -j4 HOST=x86_64-linux-gnu

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: ./configure --disable-bench --disable-tests --disable-dependency-tracking --disable-werror --prefix=`pwd`/depends/x86_64-linux-gnu --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib

      - name: make
        run: make -j4

      - name: make check
        run: make check -j4

      - name: zip binaries
        run: zip verge-linux.zip ./src/verged ./src/verge-cli ./src/verge-tx ./src/qt/verge-qt 

      - uses: actions/upload-artifact@v4
        with:
          name: verge-ubuntu22.zip
          path: |
            ./src/verged
            ./src/verge-cli
            ./src/verge-tx
            ./src/qt/verge-qt

  windows:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Update apt repos
        run: sudo apt-get update

      - name: Install base dependencies
        run: sudo apt-get install build-essential libtool gperf autotools-dev automake pkg-config bsdmainutils curl git bison byacc python3 nsis

      - name: Force Posix
        run: sudo apt-get install  g++-mingw-w64-i686 mingw-w64-i686-dev && sudo update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix

      - name: Build depends for MingW32 Cross Compile
        run: PATH=$(echo "$PATH" | sed -e 's/:\/mnt.*//g') && cd depends/ && make HOST=i686-w64-mingw32 -j2

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: CONFIG_SITE=$PWD/depends/i686-w64-mingw32/share/config.site ./configure --prefix=/ --disable-bench --disable-tests

      - name: make
        run: make -j2

      - name: zip up GUI Wallet and CLI utils
        run: mv /home/runner/work/verge/verge/src/verged.exe ~/ && mv /home/runner/work/verge/verge/src/verge-cli.exe ~/ && mv /home/runner/work/verge/verge/src/verge-tx.exe ~/ && mv /home/runner/work/verge/verge/src/qt/verge-qt.exe ~/ && zip verge-windows.zip ~/verged.exe ~/verge-tx.exe ~/verge-cli.exe ~/verge-qt.exe

      - uses: actions/upload-artifact@v4
        with:
          name: verge-windows.zip
          path: |
            /home/runner/work/verge/verge/src/verged.exe
            /home/runner/work/verge/verge/src/verge-cli.exe
            /home/runner/work/verge/verge/src/verge-tx.exe
            /home/runner/work/verge/verge/src/qt/verge-qt.exe

  SendReleases:
    runs-on: ubuntu-latest
    needs: [macos, linux-ubuntu20, linux-ubuntu22, windows]

    steps:

      - name: Generate Changelog
        run: echo "# Changelog" > ${{ github.workspace }}-CHANGELOG.txt
      
      - uses: actions/download-artifact@v4
        with:
          name: verge-windows.zip
      - uses: actions/download-artifact@v4
        with:
          name: verge-macos.zip
      - uses: actions/download-artifact@v4
        with:
          name: verge-linux.zip
      - name: list files
        run: ls /home/runner/work/verge/verge/

      - name: push zips to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v7.4.0
          files: |
            verge-windows.zip
            verge-macos.zip
            verge-ubuntu20.zip
            verge-ubuntu22.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
